
IPC for babies and those who want to become. Another thin API layer over what
Ruby offers for IO.pipe, TCP sockets and FIFOs: Makes sending and receiving
of Ruby objects a breeze. 

Currently, I am rewriting all of the code. This is why the master branch on 
github hasn't got all the features that are in the released version. 

A good place to start is the documentation for the Cod module.

SYNOPSIS

  # Cod's basic elements are channels, unidirectional communication links. 
  pipe = Cod.pipe
  
  # You can use those either directly: 
  pipe.put :some_ruby_object        # Process A
  pipe.get # => :some_ruby_object   # Process B
  
  # Or use them as bricks for more: 
  service = Cod::Service.new(beanstalk)
  client = Cod::Client.new(beanstalk, pipe)
  
  service.one { |msg| :response }               # Process A
  client.call :ruby_object    # => :response    # Process B
    
STATUS

Complete rewrite of the code: Did away with some of the complexities that
stemmed from early design work. The functionality that is there is much like
that we had before, but some things have been designed more logically. 

At version 0.4.0

(c) 2011 Kaspar Schiess